<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' inline='true' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore Dataset_Strategy Analytica' name='excel-direct.1f48tmn0n6njk718891710xl223p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/BTech CSE Lecture Notes/6th Semester/INT-233/ETP/Dataset.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1f48tmn0n6njk718891710xl223p' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X51291:no:A1:X51291:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1f48tmn0n6njk718891710xl223p' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X51291:no:A1:X51291:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X51291:no:A1:X51291:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_22664C9B92D040E0B47BAF31D6377518]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_22664C9B92D040E0B47BAF31D6377518]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;North Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EMEA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ad Dawhah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Al Minya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ardabil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asyut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baja California&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Basilicata&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brasov&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cajamarca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Catalonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chiapas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coimbra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daegu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Diyarbakir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elazig&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Federal District&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gauteng&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greater Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haifa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hims&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iasi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Isparta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jizzakh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kano&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Khánh Hòa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Klaipeda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lagos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Litoral&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manzini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matabeleland North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morelos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nariño&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nouakchott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panevezys&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Piura&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puebla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajshahi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ruvuma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sancti Spíritus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Siirt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suhaj&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ulaanbaatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Värmland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vratsa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yangon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zhytomyr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&apos;Ajman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Al Fayyum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amasya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aqmola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashanti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ayacucho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgorod&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burgas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canterbury&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chaguanas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuquisaca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corrientes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Durrës&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Espírito Santo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gombe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guerrero&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haute-Matsiatra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hrodna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inhambane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeju&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kalimantan Selatan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katsina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kigali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Libertad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liège&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lower Normandy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manawatu-Wanganui&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mehedinti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nagasaki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Holland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Osun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pernambuco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portuguesa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queensland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Risaralda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samsun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sarawak&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shizuoka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Södermanland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stara Zagora&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tabora&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trabzon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uusimaa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vinnytsya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;White Nile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambezia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Abruzzi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al Jawf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anambra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astrakhan&apos;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bacau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barahona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boyacá&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushehr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carinthia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chelyabinsk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cluj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cross River&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Distrito Capital&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Cape&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Extremadura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Galicia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Casablanca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gunma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huila&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iringa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kampala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kindia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;La Romana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Limburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lubusz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maniema&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maseru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mérida&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montserrado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newfoundland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Northern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Overijssel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Picardy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Primorsko-Goranska&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quintana Roo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rize&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Luis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Savanes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sibiu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suceava&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taipei City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vallee Du Bandama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vlorë&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Xinjiang Uygur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adiyaman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alagoas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anseba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arica y Parinacota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Atlántida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bauchi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishkek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Equatoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinandega&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dar Es Salaam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dolj&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Entre Ríos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flemish Brabant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Halland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Izmir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kabardino-Balkariya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Karbala&apos;&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kherson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kordestan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lombardy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maramures&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Minas Gerais&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mpumalanga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Neamt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nitra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nueva Esparta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plovdiv&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qaraghandy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sergipe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sindh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Dublin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sumatera Barat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tarija&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tizi Ouzou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper Normandy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Veneto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yevrey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zulia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adamaoua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Al Qadisiyah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ardahan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atacama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baja California Sur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Country&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bihor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Calabarzon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Catamarca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chiba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cojedes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Daejeon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djelfa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elbasan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Federation of Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Groningen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hirat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ibaraki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Istanbul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jubbada Hoose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kharkiv&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kocaeli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lagunes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Littoral&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maputo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matagalpa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michoacán&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morogoro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;National Capital&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Opole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plateau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Razavi Khorasan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sanliurfa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Selangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sikasso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Chungcheong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sulawesi Tengah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanger-Tétouan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ulsan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Varna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waikato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yaracuy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ziguinchor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Abuja Capital Territory&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Al Madinah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ancash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asturias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bas-Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Braga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buskerud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Casanare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cherkasy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coahuila&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cundinamarca&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Distrito Federal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ebonyi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Extreme-Nord&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Galway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Gedeh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gyeonggi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Irkutsk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kanagawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kinshasa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;La Vega&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Limousin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lucerne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mashonaland West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mersin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mopti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nampula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niamey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Mindanao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oyo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pichincha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Provence-Alpes-Côte d&apos;Azur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ra&apos;s Al Khaymah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rogaland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Luis Potosí&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saxony&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sonsonate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamaulipas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thies&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuscany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valparaíso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Volyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yalova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zeeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Al Basrah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alsace&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arusha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Auvergne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bandundu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bejaia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulawayo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canelones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ceuta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Córdoba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eskisehir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Friuli-Venezia Giulia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goiás&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guelma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hatay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hovedstaden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Imo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jawa Tengah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kahramanmaras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kastamonu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khyber Pakhtunkhwa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kymenlaakso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Los Rios&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manabi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mykolayiv&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nevsehir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;O&apos;Higgins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pomerania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qostanay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rio Grande do Sul&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santo Domingo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skikda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Splitsko-Dalmatinska&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ta&apos;izz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tekirdag&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tolima&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Villa Clara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Cape&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zacatecas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;&apos;Amman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Al Gharbiyah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amazonas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquitaine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ashgabat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aydin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bengkulu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Borgou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burgundy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caquetá&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Champagne-Ardenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cidade De Maputo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corsica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Diffa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Düzce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Est&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fukui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gorj&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hawke&apos;s Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huambo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jerusalem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kalimantan Timur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kaunas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kigoma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;La Pampa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liguria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lower Saxony&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mandoul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meknès-Tafilalet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monseñor Nouel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ogun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Otago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pernik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Potosí&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Querétaro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rivera&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Cristóbal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sardinia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shkodër&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sofala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stavropol&apos;&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trengganu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Valcea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zamfara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Akwa Ibom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Almaty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Artemisa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bamako&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boeny&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Campeche&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chocó&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Copperbelt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drenthe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Escuintla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Free State&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gisborne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harjumaa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hordaland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kafr Ash Shaykh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kasai-Oriental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Khulna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kwara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;León&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lorraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malatya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maritime&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mazandaran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Misratah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mures&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Neuquén&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norte de Santander&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nyanza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Osh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pazardzhik&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poitou-Charentes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saitama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santiago de Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sivas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Surxondaryo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tbilisi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yucatán&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aceh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Al Marqab&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andalusía&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arauca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asunción&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baghdad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Basel-Stadt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Braila&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buzau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Castile and León&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chernihiv&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuscatlán&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dix-Huit Montagnes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edirne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F.C.T.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gangwon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Granma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gyeongsangnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hesse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hunedoara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ishikawa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jinja&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kandahar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kerman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirovohrad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lacs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Limpopo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luhans&apos;k&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manisa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Masovia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moquegua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niari&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Territory&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pahang&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Piedmont&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Provincia de Buenos Aires&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rabat-Salé-Zemmour-Zaer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rondônia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Pedro de Macorís&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saxony-Anhalt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sicily&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Souss-Massa-Draâ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sud&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tambov&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thủ Dô Hà Nội&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyrol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Van&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Voronezh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yamaguchi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zhambyl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Afyonkarahisar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Antalya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atlantique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Balikesir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bavaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Jutland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chiriquí&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dayr Az Zawr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Donetsk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Enugu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gezira&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamadan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Holguín&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Igdir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kabarole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khmel&apos;nyts&apos;kyy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Las Tunas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lorestan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maranhão&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matruh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mtwara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nord&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuevo León&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orientale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pavlodar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plzen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qashqadaryo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rhône-Alpes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Catherine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Setúbal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Holland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sumatera Selatan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tartumaa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tlemcen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uppsala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Veracruz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yobe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zürich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aichi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antioquia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atsimo-Andrefana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Balti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bay of Plenty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bistrita-Nasaud&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bryansk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Camagüey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Luzon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Constanta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Donga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Franche-Comté&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gharb-Chrarda-Béni Hssen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guantánamo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homyel&apos;&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ilam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalisco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kars&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Khomas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kumanovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Loreto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Makkah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marche&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayabeque&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Miranda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Muharraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Negeri Sembilan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nord-Ouest&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nusa Tenggara Barat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oruro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pays de la Loire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Podgorica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qazvin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Michael&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sevastopol&apos;&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sirnak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Khorasan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sumatera Utara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tasmania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tocantins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Usak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Flanders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yogyakarta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al Bahr Al Ahmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Almaty City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anzoátegui&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Artibonite&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Australian Capital Territory&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Banaadir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beirut&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bogota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bujumbura-Mairie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canakkale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Choluteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cordillera&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denizli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Duarte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Friesland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giurgiu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guayas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hormozgan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Imereti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jawa Barat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kagawa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kassala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khuzestan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kwazulu-natal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesser Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Lagos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maluku&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Markazi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mbeya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mwanza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Brabant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nzérékoré&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Osjecko-Baranjska&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poltava&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rio Grande do Norte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salah Ad Din&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santiago del Estero&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skåne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Southland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sylhet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tehran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Utrecht&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Western Australia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Al Buhayrah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amapá&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Apulia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ash Sharqiyah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aveiro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Banghazi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bekes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolívar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bur Sa&apos;id&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cantabria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chubut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cork&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dhi Qar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Espaillat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fromager&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Golestan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guelmim-Es Semara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haut-Sassandra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hradec Kralove&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jawa Timur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kalimantan Barat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Katanga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiên Giang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;L&apos;viv&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberec&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Managua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marrakech-Tensift-El Haouz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Medea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monagas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oaxaca&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Osmaniye&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peravia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Porto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Río Negro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;São Paulo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shinyanga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sliven&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Gallen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tabasco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tel Aviv&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tottori&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vilnius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Visayas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zagrebacka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adamawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Al Qahirah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arequipa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atakora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Batman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bingol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calabria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ceará&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chihuahua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dagestan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emilia-Romagna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fès-Boulemane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gelderland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hainaut&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ibb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivano-Frankivsk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jujuy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Khartoum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Konya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lambayeque&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ljubljana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Magallanes y Antártica Chilena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matanzas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Midi-Pyrénées&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Navarra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ninawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Novgorod&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pará&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plateaux&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Puno&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red Sea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sabah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Semnan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Silesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sulawesi Tenggara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taranaki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tỉnh Cần Thơ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Umbria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Västra Götaland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yaroslavl&apos;&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Žilina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Acre&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Al Minufiyah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arbil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aswan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bashkortostan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Delgado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Castile-La Mancha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cochabamba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dà Nang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Diyala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fars&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greater Accra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gyor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyogo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isla de la Juventud&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jizan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kankan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kermanshah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirsehir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laghouat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisboa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lusaka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;México&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moravian-Silesian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nangarhar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niassa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ondo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinar del Río&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roraima&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Salvador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sidi Bel Abbes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sud-Ouest&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thuringia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ucayali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vargas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vrancea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yambol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;&apos;Asir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Al Hudaydah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ar Raqqah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Azuay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bani Suwayf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benguela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Borno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bursa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carabobo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ciego de Ávila&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cortés&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dire Dawa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Flanders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estelí&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grad Zagreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kayes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kilimanjaro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melilla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nakhon Ratchasima&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Rhine-Westphalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ouémé&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prague&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quezaltenango&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rivers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Fernando&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shumen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sofiya-Grad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Táchira&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ternopil&apos;&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trentino-Alto Adige&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valenciana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vitsyebsk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woqooyi Galbeed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zanjan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aksaray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alibori&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arkhangel&apos;sk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atsinanana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baluchistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bechar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bitola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Budapest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Campania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Centrale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chittagong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Constantine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doukkala-Abda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Erzurum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Francisco Morazán&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gilan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guárico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ile-de-France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jambi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kaduna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kasai-Occidental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Khorezm&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kutahya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebap&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lori&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malanje&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mardin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maysan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Misiones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murcia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nord-Pas-de-Calais&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nusa Tenggara Timur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paysandú&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Podlaskie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rift Valley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint-Louis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sistan Va Baluchestan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Kivu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sumy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taza-Al Hoceima-Taounate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tochigi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Usti nad Labem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vest-Agder&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yoro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Annaba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlántico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Balearic Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Batna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biobio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caldas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chimaltenango&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colón&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dnipropetrovs&apos;k&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland Proper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guanajuato&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hajdu-Bihar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ho Chí Minh City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ivanovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Junín&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karaman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Khatlon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korçë&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Languedoc-Roussillon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lodz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Magdalena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maradi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mato Grosso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mostaganem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nayarit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Novosibirsk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ordu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraíba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pleven&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pwani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rhineland-Palatinate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Catarina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sinaloa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sulawesi Utara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tarapacá&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tipaza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vaud&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yazd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zinder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Iskandariyah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Analamanga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ar Riyad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Babil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Banská Bystrica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botosani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Busan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caras-Severin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chaouia-Ouardigha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cienfuegos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corum&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estuaire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Galati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hedmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huehuetenango&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Irbid&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kaluga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kayseri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kilis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lima (city)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manicaland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Masaya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mendoza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montevideo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namangan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North-West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oita&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ouest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Piauí&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prahova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quindío&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rivne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Satu Mare&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Šiauliai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sokoto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Styria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tadla-Azilal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tete&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valle del Cauca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vladimir&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zaporizhzhya&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_22664C9B92D040E0B47BAF31D6377518'>
            <properties context=''>
              <relation connection='excel-direct.1f48tmn0n6njk718891710xl223p' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X51291:no:A1:X51291:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Market' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
      <datasources>
        <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
      </datasources>
      <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]'>
        <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Category-wise Average Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Sum of Profit for each Sub-Category broken down by Category.
The reference line shows the categories that give more &amp; less profit than the average profit.
Here, we can see that manufacturing Tables is actually a loss for our business.
Also, the production of Fasteners and Labels is not very profitable.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
          </datasources>
          <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#0000009b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]</rows>
        <cols>([federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Category:nk] / [federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{247F9278-2045-4922-AAF3-8E8B519B7488}' />
    </worksheet>
    <worksheet name='Category-wise Average Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Sum of Sales for each Sub-Category broken down by Category. 
The reference line shows the categories that give more &amp; less sales than the average sales.
Here we can see that Furniture and Technology are the 2 categories that account for the major sale percentage of our business.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
          </datasources>
          <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#0000009b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]</rows>
        <cols>([federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Category:nk] / [federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{A8BB585D-8711-4E55-B0A8-C9AE5087B982}' />
    </worksheet>
    <worksheet name='Countries with most sales in Central region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Sum of Profit for each Country in the Central region.
Here, we can see that France and Germany account for the maximum sales from the Central region, so we should focus more on these countries.
Whereas, countries such as Honduras, Netherland, Panama are actually making a loss for us from this region.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
          </datasources>
          <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Region:nk]</column>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]</rows>
        <cols>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{FF6FB556-7C69-4A59-AE54-48496EDBEB95}' />
    </worksheet>
    <worksheet name='Country-wise Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The countries that are more blue in color generatnig more profit, whereas, countries that are orange in color are generating a loss for our business.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' />
              <lod column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]' />
              <geometry column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[Latitude (generated)]</rows>
        <cols>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{82C74493-4EBA-4413-9D26-43D7A8CFE314}' />
    </worksheet>
    <worksheet name='Country-wise Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Countries with big circles are more generating more profit.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]' />
              <size column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[Latitude (generated)]</rows>
        <cols>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3085F78D-EAAF-43A4-9718-EF23EE2CF06A}' />
    </worksheet>
    <worksheet name='Market-wise Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Market-wise sales of products.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
          </datasources>
          <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]' />
              <color column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]' />
              <text column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Market:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1370B6B0-1DCF-496C-848D-D7B5743CD807}' />
    </worksheet>
    <worksheet name='Most sales from US States'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The trend of sum of Sales for Order Date Year.
As we already know that maximum sales from this dataset come from the United Sates.
So, the states with maximum sales in US are : California, New York, Washington and Texas.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
          </datasources>
          <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]</rows>
        <cols>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{E4E42E2C-D64A-48BB-BEE2-CAC30ACDD8EE}' />
    </worksheet>
    <worksheet name='Region-wise Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Size shows sum of Sales.
Here, we can see that Central region has the most amount of sales whereas, Canada region has the least.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
          </datasources>
          <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]' />
              <text column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Region:nk]' />
              <color column='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5328FBB4-4E0A-4A69-A9CE-751E40AB5816}' />
    </worksheet>
    <worksheet name='Segment-wise Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Sum of Sales for each Segment.
Here, we can see that Consumer segment is where the sales happen the most.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
          </datasources>
          <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]</rows>
        <cols>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{7C3422A2-98A1-43F9-9E30-A1E6B0F91F12}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Analysis of Global Superstore dataset</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f3faf9' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='font-weight' value='bold' />
          <format attr='font-style' value='normal' />
          <format attr='color' value='#e15759' />
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#00000000' />
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
          <format attr='text-decoration' value='none' />
          <format attr='font-family' value='Verdana' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='font-weight' value='bold' />
          <format attr='font-style' value='italic' />
          <format attr='text-decoration' value='underline' />
          <format attr='font-family' value='Lucida Sans' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders (Global Superstore Dataset_Strategy Analytica)' name='federated.0j89ero0mu0f3l10zqh681d4bu7z' />
      </datasources>
      <datasource-dependencies datasource='federated.0j89ero0mu0f3l10zqh681d4bu7z'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97644' id='14' param='horz' type-v2='layout-flow' w='98792' x='604' y='1178'>
            <zone h='97644' id='5' param='vert' type-v2='layout-flow' w='86717' x='604' y='1178'>
              <zone h='5596' id='7' type-v2='title' w='86717' x='604' y='1178'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='92048' id='6' type-v2='layout-basic' w='86717' x='604' y='6774'>
                <zone h='46021' id='16' name='Category-wise Average Profit' w='43358' x='604' y='6774'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46027' id='20' name='Country-wise Sales' w='43358' x='604' y='52795'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46021' id='22' name='Countries with most sales in Central region' w='43359' x='43962' y='6774'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46027' id='26' name='Region-wise Sales' w='43359' x='43962' y='52795'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97644' id='13' is-fixed='true' param='vert' type-v2='layout-flow' w='12075' x='87321' y='1178'>
              <zone h='9573' id='17' name='Category-wise Average Profit' pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' type-v2='color' w='12075' x='87321' y='1178'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='88071' id='25' name='Country-wise Sales' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]' type-v2='filter' values='database' w='12075' x='87321' y='10751'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Analysis of Global Superstore dataset</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97644' id='35' param='vert' type-v2='layout-flow' w='98792' x='604' y='1178'>
                <zone h='5596' id='7' type-v2='title' w='86717' x='604' y='1178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46021' id='16' is-fixed='true' name='Category-wise Average Profit' w='43358' x='604' y='6774'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9573' id='17' name='Category-wise Average Profit' pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' type-v2='color' w='12075' x='87321' y='1178'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46021' id='22' is-fixed='true' name='Countries with most sales in Central region' w='43359' x='43962' y='6774'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='88071' id='25' mode='checkdropdown' name='Country-wise Sales' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]' type-v2='filter' values='database' w='12075' x='87321' y='10751'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46027' id='20' is-fixed='true' name='Country-wise Sales' w='43358' x='604' y='52795'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46027' id='26' is-fixed='true' name='Region-wise Sales' w='43359' x='43962' y='52795'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3FE81D12-68CE-4720-AECA-2488835BF43A}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Category-wise Average Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Countries with most sales in Central region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Country-wise Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region-wise Sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{3761594B-DA62-4104-B7D5-19B5DA918EFA}' />
    </window>
    <window class='worksheet' name='Category-wise Average Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Category:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Region:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{202DF5DD-0EE4-4898-BD3F-5588198F9579}' />
    </window>
    <window class='worksheet' name='Category-wise Average Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Category:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B803F57-065F-4690-9184-EEFDE5729D41}' />
    </window>
    <window class='worksheet' name='Segment-wise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Calculation_138767187691065344:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Calculation_138767187691872257:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Customer Name:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Market:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Order ID:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Order Priority:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Product Name:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Segment:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A09C6511-6F18-43BA-879C-1AE7AE52DCA2}' />
    </window>
    <window class='worksheet' name='Market-wise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Category:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Sub-Category:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDAE75E5-453F-4163-8B8B-86FB42E4593B}' />
    </window>
    <window class='worksheet' name='Region-wise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{968065B7-57C6-4B81-85E2-D92AD3F18ED2}' />
    </window>
    <window class='worksheet' name='Countries with most sales in Central region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Category:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Product Name:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Region:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82981A26-2038-441E-9851-75E17077225A}' />
    </window>
    <window class='worksheet' name='Country-wise Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA9F1DB0-5DAF-41FE-9454-22A2BAC8AA3E}' />
    </window>
    <window class='worksheet' name='Country-wise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ADF593DA-9BBB-40A6-8BC4-12FD517318B5}' />
    </window>
    <window class='worksheet' name='Most sales from US States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:City:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Country:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Market:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Region:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:Segment:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[none:State:nk]</field>
            <field>[federated.0j89ero0mu0f3l10zqh681d4bu7z].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22A5D994-5053-4AB6-B3FF-8765434CAECC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Category-wise Average Profit' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Category-wise Average Sales' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Countries with most sales in Central region' width='240'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Country-wise Profit' width='240'>
      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
      yP8DWqfuIEGC5u8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Country-wise Sales' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Dashboard' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Market-wise Sales' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGBUlEQVR4nO3aXYvc5R3G8Wuyed6seWpiolkT20RjtLXRPtAjS0HwJfQV+FL6VixC8agH
      xdIDUTBQrbTEJsRqu1WTGN0k3W32YXZmeiAIhmzZFTd64edzNtwz8PsffLm57/8MJpPJJECl
      bd/0AMBXJ2AoJmAoJmAoJmAotn29haWV1cxduxmX1PDttW7A/7w6nxd/81JWVtfu5zzAJqwb
      8GQyyfLqMMsChm8tZ2AoJmAoJmAotqmAB4Pk/GMnsmP7VJLk7KkH88IvzuXpMw9nMPj8O0/9
      4Him9+z84jc/fuxEnjt/Ort2rnvcBr6iTQV8+IHp/PypUzkzeyRJ8szjs3nzbx/kewemc+7U
      8ezZtSPPPj6bn5x9JEnyy2fOZNeOqVz58EZ2TE19/dPDd9ymAj710OG8euFSzsweTZKMx5Pc
      WlzK9fmFTE1ty+yDB/P25Q9zeP90tg0GeejI/ly4+K98fON2FpdWtuQB4LtswwEPBsnPnjyZ
      n547mR+deSi7d+7IzN5d+fXzz+bEkQO5PHc9z56dzTNnZ/PEo8dy5OC+rZwbyP95D3y3mb27
      M3ftZv7w5t/z+CNHc/bk0SzcWclvX30rSbJz+1RWh6P87k/v5MFDM3ni1LHMXZvPc+dP56Mb
      t3N9/j9ZuGMXhq/ThgNeG43y+jv/yHBtlMtzn2T/vt355ObiF+uTySSv/eW9rK6N8tGnt7O6
      Nsr1+YU8+eixHHpgb+auz2/JA8B32YYDvrM8zJ0MkyTDtVE+vfXfL60PR+PcuPV50OPxJNfn
      F5IkFz+49nXNCtzFe2AoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAo
      JmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAo
      JmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAo
      JmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAo
      JmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAo
      JmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAo
      JmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAoJmAotn3dhamp7N+3J7tWhvdzHmATBpPJZHKv
      hU9uLebl1y9mOBrd75mADVp3B/5scTkvvXExy0MBw7eVMzAUEzAUEzAUEzAUW/cS626DQfLC
      +dOZ2bMzi0uree3duRw/uC9Xrs7n4cMzWV5dy2cLS1s5K3CXDQe8bTDIcG2cl994N0lycN/u
      nDyyP1euzufYgX25tbgsYLjPNhxwkpw+fjCHZs7l5uJy3n7/6lbNBGzQpgJ+7+rN/PGv7ydJ
      DkzvzrbBIMnnu/P43v8HAbbQpgI+cXgmv/rhqSytruXP732cA9O78/zT38/R/dO5+O8bWzUj
      sI4NBzwaT/LKhUvZPrUt4/Ekw9E4r1y4lAf27sqdlWGWVte2ck7gHja1A9++s/Klz8PR2MUV
      fIO8B4ZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZi
      AoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZi
      AoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZi
      AoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZi
      AoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZiAoZi
      AoZiAoZiAoZig8lkMrnXwvzCUn7/1pUMR+P7PROwQf8DetIUXhdetpAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Most sales from US States' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Wa8l15Xn99s75ogz3TFHJmcmRYlSSyrV4KqeANnthl3wB7Dh4cHfxo9G
      vxiG0faD4YeG0ehC21XVLlRBKlWVqloSRVIUhyRzzrzzmWKOvbcfdpxz7k2lyCSVKeZhxg8I
      RJw4w4177/nvtfZaa68QxhhDR0fHWiK/7Avo6Oj44nQC7uhYYzoBd3SsMU+1gLvpeUfHp9MJ
      uKNjjXmqBdzR0fHpdALu6FhjOgF3dKwxnYA7OtaYTsAdHWtMJ+COjjWmE3BHxxrTCbijY43p
      BNzRscZ0Au7oWGM6AXd0rDGdgDs61phOwB0da0wn4I6ONaYTcEfHGtMJuKNjjekE3NGxxnQC
      7uhYYzoBd3SsMZ2AOzrWmE7AHR1rTCfgjo41phNwR8ca0wm4o2ON6QTc0bHGdALu6FhjOgF3
      dKwxnYA7OtaYTsAdHWtMJ+COjjWmE3BHxxrTCbijY43pBNzRscZ0Au7oWGM6AXd0rDGdgDs6
      1phOwB0da0wn4I6ONaYTcEfHGtMJuKNjjekE3NGxxjx2AZsm44d//if8+Bc3Abj93t/xJ3/6
      F/zVD3/EtIQP3/pb/sN/+HN+/M7HNHXJe++/D6bm7374N5T6cV9NR8dXG/dxf2A6Tbn65pvc
      PKgBw/FxymtvvMG5jSEDcczP8j7f//7v8ZMf/4i0OE9RFnz0079n87VvEkjQeqXipmke9+V1
      dHyleOwC7m3uII5uLR9feukV9sfH/Oz9n/PaG1dx+31A4IchWiluf/BTVO9V/vjbCWBFa4wB
      wHEcpOy8/I6OX8djF/AZDPS3zrN53mPTSdnLBc1kjDGXKPMC6ThcfvXbbMqCd28c8eYL2/i+
      v3y71roTcEfHp/DYBbx/45e89d41JrkiiEL87A53DlOME/IHf3SF+8U+f/EXf8nGpVdIQpck
      Tnj+1Td5+x9+zPzCJv2gE2xHx6MizMJffQrpLHBHx6fTqaOjY43pBNzRscZ0Au7oWGM6AXd0
      rDGdgDs61phOwB0da0wn4I6ONaYTcEfHGtMJuKNjjekE3NGxxnQC7uhYYzoBd3SsMZ2AOzrW
      mE7AHR1rTCfgjo41phNwR8ca0wm4o2ON6QTc0bHGdALu6FhjOgF3dKwxnYA7OtaYTsAdHWtM
      J+COjjWmE3BHxxrTCbijY43pBNzRscZ0Au7oWGM6AXd0rDGdgDs61phOwB0da0wn4I6ONaYT
      cEfHGuN+2RfQ0fFUYww0DZQlHB3C4QEUBXge+AH4PkQRuK7d+z64HkgBUoKQ7bEDQjz2y+sE
      3NFxmqaBPIfJGMYncHAAk4l9rBQ4DgSBPW4UqOZXP0NI8L2VmD13JXbvlODDEKLYPu849jnX
      Ace1A4T72fIUxhjzBP4MjwWtNVJ2Xn7HE6RprFU9PIDDQzg+gryAqrTWNwxhOIJz52BzC7a2
      rNCMBqWtkKvKbkUOdWUtdFHYc2V5amvPPYgQVvSuY622dMCRVvy+b6/B8+w+jOwA0g4AnYA7
      vtooZcUzn8H+/kqs06l93nUhCKHXsyLd2rYiHQx/u9dpzAMDQW0HgTyHpl4NAnUFZWXPK9UJ
      uOMrhDH2Cz6ZWpGOx3afziHL7GuCwFrSzU3Y3oHRCPp96+KuG6rpBNyxhhhjN6UgTWF/z7q+
      Bwcwm0LdgFbWBe33YGsHtrdhZwd6feuWfkW+V52AO55+jLEu5WxmA0uHB3B0BCfH1q0EOz/s
      9e18dXfXWtaNTXv+K0wn4I6nD62t23t83FrWfSve2cw+JwSMNlZu8NaWncNGsY3mPkN0Au74
      8ljkWIvCpmoO9qxoDw9tIMcYG5GNIhgOYWfXinV7x85lpXwiudV1ohNwx2+PxZx1NrXz1eMj
      G2iaTu2cVUrrBg8GNhq8swP9gX38jFnWR6UTcMeTo6qsOPdby3qwD1m6mrf6/lmrurFh85y+
      /8xb1kelE3DHb47W1g1ezFsXgh2frKqXfN9a081NOH/eCva3nWv9CvJEBJxPj5jrkJ1Rgqpz
      rn3wEb3zL3Bxq0+djfnlR7d57uXXGEYOk9mc0XDI8f4e/e1zeKf02gn4KaUqreu7yLMeH9tC
      iUWu1Q9sFHi0sbKucWy3zrI+Vh57LfTs4CZ//7N3iXZfY2f4Eu//9D/iXXiFG2//HeHv/2Pe
      +ZufcvUbV3nrJ//A7/7Od/jkxg3euLLJz6+d8E92zv3K5z3FDsJXH2NAa0SWWpHev7esYjJ1
      bS2vdOwc9dLldt66ayPCnvfweWv3/3ysPHYB93eu8HvfEfzybgWmYawD/uC58+yIQ25/cgNn
      5wXOnbvI/r07FGXN9Oguf70/5vf/2R8hhbW6C9E2zUMKxTueDMbYkr15CvMZ8vgI5/gIsUjf
      gHWDkx7m3HnU7i56OMKMNmxE+EGUslvHE6Ou688jYMO1t/+B5LlX+NN//b8w/Ef/gv/qn36L
      39ghMgZt9EMHZs/zOhf6SWEMzOe2GOJokWudWje4rm1EOE6sVX316qo+OIkRrtctY/uSUEpx
      ++ZNfvnuO3z4/i8/z/9Bce0XN3mhOiT+zr9E3r1Fybd4sM6lKjIm0xnpvCItFSNZ8tGt+xxe
      u8/V3//HHP/1j9jbCzie1bwSeAy2L/H1F3b5wd/+hH/6h9/FPSVYrfXj+a2fZRYlh4uC/rt3
      bfpmsa5Va1vQ7/u2RvjlV22gaWvbWlbnyaxj7Xg0tNZkacqN65/w4Xvv8dEH7zMZj5GOw/bu
      7ucRsMPlKxH/919e57/7H77Hu+T4D3lVOjlkb1zSD2H/JOXqt7/LtQ8+4vk3f4/NMOAP/uDb
      /PKj23zrO79DGDi8+Pzz+IMh33tDUCmDK7svy2+E1nalynQCJyerov7JeGVZo8iWGW5tWaFu
      bNj8a5drfSpQquHk+ISb1z/hvXfe5ub168ymU3q9HucuXOR3/5M/5JWrVzl/4eLnEbDgwpWX
      iP7qOsZ32NrafKj7vHHuChvnrpw599rX31wee/GIN785Wj4eDW0qYbD1qwGsjkdAa9spYlEY
      cXgIeWYtrtZ27epoBK9dbUW7DXFk862dZX1qMMZweHDAO2/9jPd/8S4H+/vkWUYQhrz2+te4
      +sYbvPLaa/T6gzPTys8h4Ia//+u3uPrCJWrX4fa7H/G1N15hDRdhrSda28KI+Wy18uZg31pX
      ra1lDUK7NO75F2C7LZAYjTrL+hRijCFLU27fuslHH7zPR798n73793Bdl62dHb7zvd/l1ddf
      54UXX8J/WJCw5XMIWLK9HfJn/9/P+Gh+C3/0DbzH8It0/BqqygaZjo9WK3Dm89VC9CCwQaVX
      XrWpm4UbHMdf7nV3/FqM1kymE25dv84v332XG598zPHREUEQcPHyZf75f/qf8errr3Pp8nN4
      /sMmqL/KIxZyaPIsp6krDu7fYdYEPH/lMsN+9JtHoT/tpz4LhRzLIFOxsqrHx3arq1UlU5xY
      kZ47b4NMG5uP3Dep48vBGIPWmtl0ynvvvM1777zDnVs3KcsSz/O48sKLfP2b3+KVq1cZDIe4
      X+B/+YgCnvK//U//iptpuTxz4ZXf57//r//FQwNZj4snIeCmabh+7RoIEELgt50YhBA4rasp
      HYkQEgE4bntOOoh2zug49lhKiWivz2mPZbv9WqrKpmqmE9vi5aRdMpem9vk210q/D7vnrGg3
      Nm1xRMdaUOQ5d2/f5oNfvseNTz7m9s2baK3Z3N7mhRdf4o1vfpPnrjxPr9//jX/W5yqlNLrh
      +PCIslF4YcLW5vCJNpZ+EgL+5No1/td/9T8/NEW1ErAV6BlRS4kUsn3eCtyKVbTPOwgpzgjY
      dV0cxwUBQRCA1jizGW5uex4Fp363wPNgtEGw05Ydeh5BYJN0QRCwcHUWA47jOstr8/0AIew1
      LEZxx3FwXBcp5UPPeV43AXqc5HnG9WvX+PD997n24QccHRwAcOHSJV58+RVee/1rXLx8mThJ
      HuvP/RwC1vzg3/7v/PkPPmT76nN4wWX+x//2v3yiCf0nIWClFLduXCdNUzBQ15Wt/tKGqiox
      QNWuljHGLI/rpkErdeZc0zSotlqsLgp0nmHSlLJ9XhmNMobGgJISPA8jxLLSbDGIGGOW58zi
      3Onj088/sAeWnoE4HVUWwmp+sT9zLJYBaOk4SzH77Sog54Fzi8/1gxAhwPP95WDm+z6iHRAW
      /6vFudMDhef7y8HN86zfJqVczvV831sOil77M/32ucVgCiCkQCBAsLwGIcQyoi7bYwFL72jx
      /tOf85tgjEErRZrOufbBh7z79s/5+KMPqaoK3/c5f+ECX/vGm7z2tTfY2t7+Qq7xo/I5PllT
      NiP+83/+O3hf/y43/u4d1rHMwnEcXnjp5d/sQ4yxqZrptF2A/mtyrYORjQLv7tpWL4MBSkpU
      K8y6bTGqlEK3ZYdVXWPlC3VVr57X7fNVhcCW0S00bAcMg1KKprYDSlWWmOW51ec0Tb16jzl7
      riqr5bxNLa6nqtFaYbRh1gbQmkZhjG6P7c87/R7VNMtBRz2GckohxMqLaD0IIQRuOzi4jrMc
      PM4877bPuy5CSvs6Z+EdecupkB/4Z85Zj8l6PwI7cAG4novjOEzGYz56/33u3b1DkecMhkNe
      e/1rfO0b3+DKCy8y2th4LAPFo/C5Cjne+O7X8SOPP/l3f8Zz3/yjZ6ecTilbD7y/Z8W6v2eL
      JYpi1TVie9tWMe3u2oqmKFp1jTiF027A0sI8bSxEDNYL0K0YFx6B0nq5KGFRu25YPa+Vto/N
      ysuoq2p5XFUVxmjqqm7fr6nawUxrvRzY6to+/7BzRj/wnrpqvSN7rqnrpXdUFPnSeyqr1fNL
      j+phvZo/g63tbb757e9w9WtvcPnKFXr9/m9NtKd5RA0a3v/Fe7z8xhvMbr6DFi7b25tfvRsr
      LXKtWWot6mJd6/GRPS+lLYzoJXDhIly8ZHOtG5tfmS6HcDag9yzlkOu6XnoMTXt8ekpVFgUA
      Sa/H5tbWl3WZZ3hEAU95660bXP3aK/y7f/+X/OH3v88//O3f88ZL/8V654JVA+OJjQgf7Nui
      /vnMRoS1tm1JB3248rwV6fa2zbUmyVdKsB0Wz/NWwb016Wb5iAL2KSY3+Ms//bekG2/wypUL
      vP2Tj1nLlZ2qgXfesWtbT+daF/PWnV14/Y22imljlWvtyg47nkIeOQo9vvcRf/vOHX7vD/+A
      xMz4ZK/g6kuXnujFPZFCjsND+LP/x7rCm61V3Wxvp9FVMXWsGc9eT6zFOli/vT1kZ1k71phn
      T8AdHV8hnplMUEfHb4wxoGtQJUgPnC/fg+sE3NFxGlVDNYfiBIqxPS5n9rg4sc/rpr2PrwfS
      tUJ2I3ADcEPwIrt3Q/saL149tzz/eKTXudAdX22MAaNAVVZ8qmwFOl4Js85WAm2KU28W4Hjg
      +HbzYvD7VqCqAVVAnUOT2xt+6/auiAtLbZQ9/zCk24o5aj97sU/seccD54HBYCF8IZf7TsAd
      649urAjLOTTZyoKWMygm9lydQV20Al185UUrkBiCpBVnDOEGhCPwe9ZyerHdPs1q6mY1SBgF
      Tdm626cHjtQ+bgr7uCns61RlN93Yc4v3PQzhrKy+dDoBdzylGN1urQUtp1aQ1cKdHa8eV3Nr
      +XRjXwvWSglprVY4gqAPQbsPR1aswcCKQbq2HFZ8CQ38lr/nA5turPCb4uGbKqHJOwF3fElo
      1X4Jy5VbW86gnJxybVN7vpqfdUWdwFrGhVsbDFuBDuzm91Z75+msN39cdALueDIYc0qAqbWg
      xdhazHJmH58WsD7VxN8JWhH2rKVcWsy+Fetivui0In6Gc/ldFLrj0TG6DdK07mqVWpEWkwcE
      Om0FWreW02AX8C7mb761kPEm+IPWxR1AOFwFiRArN/gZFuiDGGNAaShrzDTrLHDHKYxeBVnq
      AqrpyrWtZpCftMGgdlOrFkvLqKoX2/3CrV1a0N4qGOR1Nzl7VIw2UDeYrMRMM7tlJRQ1GNMJ
      +JnCGJv6qDLIj1fzzWq+sqBN0aZDHoiEShe8XuvG9iHaat3c/mq+KT2b/pCetbYdXwhTVFao
      kww9SaFqoG6sI+M5iEG82joBrznGnBVcnbcplekqWlvNrViLyVmruUhJnA4ILeaa0WYrzP5K
      pKL7XzxOjNZQq1awOWaSYiYp1Mq2AnEcROQj+hFimCB6ISI5u8yxE/A6sBBmNV8FhorJSpSL
      1EKd2aKCBcJZubULa+n32jnnEPxkFTByw85qPmHMYu46yzGzzO6zciVYz0X0IsSwta6Bh4g/
      /dYJnYC/DIwBzCrPqSorvGJsLWd+YoWan7R5znQVOFqkU4S0AvWidr45gGjDVvIscp3BsLWy
      zirX2fHEMcZYd1dpTF5ixmkr2MK6wos7afguYhAjN3qIfgS+C67zuVrzdAJ+UizznG21TX0q
      lVJOV6mVam5FuqQt33PD1jomp6zmIo3Sg3BgxeqsdU+UrwxGKShqG2yaZFawaQGNBimsWOMA
      kUSIjcRaWv83TwJ1Av6iaGXFuUiZlNO2pvZkFbVVJdRtntOc6s64zHMuCg+SVa4z2rBBIDdc
      zU07njpMozBpYYNNswIzz6GsbYpHCIh95CCGXoTsRxD6j0WwD9IJ+DSLPKdu2rrU/OxKlDqz
      c86FFV2UvS3znK2buph3Rpsr67lIpwR9+3yX51wLlnnXqsHMcyvYeStYpbH11I61rsPEBpz6
      EXi2LPNJd6p89gRsjA3+LIoQFgJduLML0dbp2eqghVX0Ymsx3cgKMhzZAgQ3PJvr7FhLjFKQ
      13buOsvtlrd5VwBHWmvaC22wKQmteL0vpybq2RPw/D689X9YoZ4RqHvKSg7ORmzD0Wpt52Jp
      WWc1vxKYqrHz1Wkr1qywUWHVBgsDz1rVRXQ49K3Fdb+8gKBpSvT0Durm3zyDAlYV3PmxFeFp
      t9bvbh72VcUYA4uKpryyc9dxaoNMeVusIgX4HiIJEP0YMbCu8JdlWVfXXWOyE/TJJ6i7P0Xd
      ewt156fWQ5TeMyjgjq88xhg7Z02LVQliXlmxNm3O1bc5VtELrXWNA4gDhPPlft+MbtAnN9D7
      76H23kHd+zlmcguTn1jB9s/hnP8mzvk3kee+3gm4Y32x+VZrXU1arOass9yWHy7cYFciomA1
      Z+1HtiupIxHyy5sKGW0X/uujj1D3fobafw9196eY7MSWvEoPObqCc+FbOBf/Ec7F7yAiW1e+
      vNlbJ+COdcFoA43ClBWk1rLqWQ5pYV3khWUNPOsCJxGiFz4VlhXAqAoz30cff4y6/zZq7x30
      /nuY9BCEg+jtIDdfxjn/jdbCfgOZbH/qZ3YC7nhqMUpDXrVFEW1UuKysddVmFRFu56uyH0Pg
      2SDTUxBkNKrBzO7ZeeveO6j7b2PGN607LCRy43nkuW/gbL+Gc+m7iMFFRLSB+BwVc52AO750
      jDG2YqlpVtHgWW6DTAs32BEQ+DbINEgQvcAW9jvyt5Jv/czfQTdQztHzPdS9n6Nu/Ai19y4m
      O7JFPH6CHFyy7vAFO4cV/Qvg2Psif1E6AXf81lla1qywRRGLov5ylWsVUQCxbwNM/QgR+Tal
      81sQqtEN1DmmnGLyMSY9wGTH6MkddHoA5QQRbVprGQ4x5RR1/230wQeY7NB+SDjE2X0D5/yb
      OBe+hdx5Hdk/99ivtRNwxxPFmDZ9k5Z2udy8sJb1dJApbHOt/djuQ9/WDj/BeatpSjsfnd6x
      +9ldzGwPPd/HzO5hyhk0BabObC3758WLkKPnEb1ziHCITLYQyU4r+hEi3kL0du3+NxiUOgF3
      PBaWudaqsetbF27wPF/lWh1pl8xFvl0u1wuXy+YeyzW07VtNlWGqFFOMMbP7mNl9K9TsGD29
      i5nexeTHqzcuSloXHTA/DekiggFicMFa10vfRQR9TDnDZEeY/KTdj+3PalvJmmVHyeqBnyEg
      6CN75xDRyAq8f94eJ7uIcIBMdhFB26DPDRFuCF6I6PpCd3xRjDF2bWtetTXCi5LDys5nRbsC
      Z1FqOIgRsW+DTl+wisnmd+eY9BBTjNHpIWZ2Dz0/wKT76Mkd+3x+gimmtskB2GvxYmvt2iCR
      qQsQYvk6k50A2vbxsm+yIho+hxxcQI6uIEfPIzdaq9o790jBJqMaqFMr8GpuB5f8GDM/OCX2
      Y0wxtc+3AwFVevaD2qWjIhwg/H6773UC7vh0lmtbtYaiQo/TB3KtCrsEUq6KIpYF/e5n5lrt
      5+t2vbPC1BkmO8a0800zvYtO9+1+ehfqDLNolq5Ve5cCB+EnVqD988jeLiLZsRarfa2e3sbM
      D9HjmxhV2gYJWoHjIrzECnNwCWfnKmL0HM72q4hgYOvaHf+Jz72NapadVYyqoCmtmGf37Ty8
      OEHP9qzY0yPrXaT7nYA7zrLMtRZtrrVd12rmxWqpnHuq1ctCrJGP+DX/K6NqqNLWAqWY7BAz
      30PP2jloemAtUfsFXSIdazmDvt2iTeTgop079i8go027MF5IO6ed3UMdfICZ3kEff9xGgLXN
      sUZDRDhsLepF5PZV5PAScuNFRG8H8ZjuVfTbphPwM47RBtICPbcFETbXWkPZ2DmhIyHy7ZrW
      topJBN6ZiLAxGqq5dWnn+5j5np1vjm9Y93a+Z+eCrYCXzfKEBL+HjDet5ey3edDBRWS/dVO9
      yNapG43JjtDHH6PHt9AH76HHt6wlKqbtLVOEdS17u8jNl5HD55DbryJHz1nr3A4EXyWeuICv
      //wH/PxuzbAX8u3v/T433/oh96cl4eZlfu8bL/LeBx/xjddf4q9/+BN+95/8EcEpvT4JAZdN
      wQ+u/SW9oMdGvMVWvI3v+viOj+d4OGs6En8WRrfrWuvazlfnxbJAwkaDjW2iFnjQC61gYxcR
      SoyxN/Iy873VfPPkhhXU9I61nIu2P2bhUvsIxwc/RsTbS8spB5dsxVG/taRBrw0gAbqxVnp2
      H3XwS/TRR7Yu+PhjTDFpPx+bO/UTRP88ztYryK2XkZsvIwYXkIOLIFzrGj8DTfie8LfVcHKc
      cvHyC1y6cJGBOeaEHb7//df56d//DWlxBaUa3v/JT3j+m985I16wAtb619zd7Qty5+Q2/+d/
      /NfkbfM3IQSJ32MUbTAMRwzCAdvJLhvxBju9c/SDAf2gT+wlxF7ypRcMPDLaIOoGkVU2hTNN
      V/2EAeNIjGsgaBB+hXAKkDm6OkIf3MV8fB+T7rfzr4mtHlr045KeXRO96Chy7k1ksmMtZ++c
      zZHGm4hkGxGOzi69NAaqGWZ+H33/bfTJdfTRNczsrrXgkzur4JPfh2QHtl5rg0hXrMubbCEH
      l23HklMYYBnfVRp4vN+dp5Enbm5e/fbvMssKbrz9N9Qvv4aTJIDACwKM1tz+8Keo3mv88UYE
      QNM0nHYKHrdgAnZw9v+YOj1ByTlCKgpZcSxV+yWeI+QNcGqErHFdiHxJ4Asi32MYbbAZb7HT
      O8dWvMV2b4dRtMlOsoPvfnoHwSdK3WDmBXqcQlZCViIabb/IRkMzRmfX0elH4MzR5QGmPABT
      r1rRnkpvLNMYg4vLMj+Z7CB6u9A7v7o1phf92rv2mSpFH7yHOvrIBo9ObmBOrrf9qBduL+CG
      tmh/92vIq//SWuutV+1dAoN+1yDhU3iyAjaghcPuufOo4xuMdUB1fA+lLpDOc1zX5fJr3+Vi
      pPnJB3f4nauXcd3VJT0JFzoKfC4MLuLoIVprGqWpa43WhqZpHyvN6XnF/PQHyBohK3CmCHGM
      cH4BssZxG+LQ4/xgh81en+3BiK3eiM1en63BgGEc40iB60hcR+JIiefavetI5COuijGNWvUS
      nmSYtI0IFzXGaIQuMfUEUx2g0w/R+cfo7AbUR22zvADhJTa/OLq0nG/KwSVEvGWjsckuwv9s
      0SyDU+kEne6jj66hxzftPPXoGmZ2z75QOOAniKCP09tF7L6Gs/0aYuN5nK1XkRvPP/L/r+Ms
      T3YObDQ3PnyH63eOcJNNvvfdb3F4/V3ev7nPuRde5+pzW9y8fZcXX7jCB2+/xYXXvkX/lB/9
      JINYqhVvWSnKWtEou69qRVk3ZEVDVTekRU1aVOSlPZ5lJWXVUDWasmqYFxV1oymqhrpRpIvW
      Kw8gANeVBJ6L7zl4jiQKPFxHEngOUeAR+A5J6NELXXaCiot9w8V+wFayAY2PSWtMXttcq9IY
      ozHVIaa8h8mvo/Pr4NR2kPEDRO+cTan0zyOHz9kobNBHRBsQDh55jmiMtnW+0zvoyR3M9Db6
      6GPUySdtRPlgZU39xLrRg4vI4WXk1is2kBRt2Wivnzyef+AzSlUr9k5SjqcZdw5nXRT6i2CM
      QRtjrbbSaGNQ2mC0odGaqlakec08r8irhnmeczKfczybcDA54HByzHxyzGatGVGyJWfsOFNG
      XsNmGLPd3yaML+MnL+D7Qxw3QBlJoxpm2R7Hs33254fszSfMqob7dcTU9PCHF0j6fcIwopck
      JL2YJPQJPDswJKGP7zv0Qp849EhCO4AIIXCFwREaU6e2tPDoY/TRh6sgUnaEqds2RO0d4uXg
      kl1Rs/O6nZ9uvWTLBdu7yX+eVTVPI8YYlFFUuuS4OOBudpO72W3Sekbi9Rl4Q4b+BgN/ZDdv
      hCtdJA5SyC80/Vt8txqlyYqa6/cn7B3PuX5/zK39KfeP56St0YAujfTYMEZDU9na2UURfH5i
      y+nSA/TkFqaYoGf3rcUyLsLfQYaXEMkrdh9eQbhJWznkcKQmfJzf5J3Zh9zMp9yeVKS1i9E+
      RnlgHIwKQTsY7YN2AIknQjwZIYVHXVvPQrf/ZokmFCV9mbMlJ1wJp7wYHvNyPOWcN0Gke9CU
      KCMojE9qIo7UgEO2qHpXGF16jWj3ZUbnn8cNe7hS4HsOvuvguhLPcfA9B/cpWH/7eTHGkKuM
      aTXmqNjnbnaLu9ktTspDlFE4wiVxe0RuTKUrSlVQqBy9jB0IEjeh5w3pewP6S125DTgAACAA
      SURBVIEP6XtDQicicEICJ0QKidaGrLRe3cE448b9MfeO51aoR3MOJxnaGBwpGCQBG72QrWHM
      K5c2ubDV59J2vxPw58Hoxgpzkeec3WsLEu7bc+khps5tyqNKYTGTFi4iuoIILyHjV5DRFYS/
      De7IFhA4ctnehUUlk+8yNznzOmWaj5kUYw7TQw7TfU6yY47SQ+bljIP5Pqr9AhkjEMbBlSGe
      DBk4MS97A17E56J2KPc/ws3uM5Rz+iInka3b6/iIwUV07zKf5H0+zje5kfe5k4UcFC4ndYCd
      BJzFkQLHkfius5wWuK597LnW6set5V96AZFPEnr47bQhDjyiwE4r4sC+Pvgt9aHSRpE1KXv5
      Pe5nd7iTXmdSjUmbGcoofOmzFexyPr7M+fgiO+EFEq9H5MRUuqRUJYXKyJuMk+qYWTVmWo+Z
      VhOyZs6kGmPaSLhALMUbOhE9b8DkRHLzdsXhoeb42FCkLkIFXNwecHGrz7nNHq9c2mR3I2Gj
      HzKIA3zvrFfzzAvYaL28MZhRlU2ZzBclfHurFSqT2+h0f1XCZ3R7r1sP4fi2ACHaQPQvI4Jt
      hOiDHoLpI8QIhI9wXHCc5S01RC+yi9HjwDZVe8R1rQvXTqsGVadMpnc53HuXw1s/5uTOTxg2
      BedVxY6qcQBXCIz0SHXDsXTZdzz2HI/7jk+ZbLN9+Xts9s6xM7hEEow41z+P74S40sURLkZL
      ylqRFhVpUVPWiiyv2viAjRFUtWKeV2RlTVnZ47SoKKoGre10Q2nrHqp22qGNQba/sxAsjz1H
      4vsOSWjFHnguSeS1A8Kpc+0AsRD+4lgIcKTEkQIhBa6UCGmoTcmkOuFedps76Q32sjukzRyN
      wREOidtrxXqJc+EFtsNzeNLHeZSa53YaVVQNs7zg/vGMu0dT3rpxg4/27+DHJUHUEPUregPN
      aMMgpKbRDY1u0MZgtEAKl81wg41wk5E/OuOiJ24PR7q4wv5fhBDPnoCNqmg++YEtREj30ZPb
      tqg8P8GkR7bb3wI3sEGfcMPmNeOttiBhB9m/AMEmQiagQlD+qYL+elXFFHi2oP90D+HPufrG
      LhyY2Zrg2X307H6bP/3QzlfHt04FkXo23ZNsI4eXEaMrONuv0UQbfFKn3M7HrQU/4GC+T1ql
      pNWcWTmlVqsAXOTFDMMhvWDATm+HfjBgu7fLTm+XYTiiF/RJ/IRhNEJ+SjCsUZq6URRV0wb6
      9FLweWnPlXXDNC3JyoasqChrxSQtqWpFVTeU9SLQqCnrhrJSVM3DVw3ZNRQOcSwZjQwbuxXn
      LyqSUcmsOSJTKVpDlbvkswCdDXhh9DyXh+e52D9P5Pv4nkPguW3Q0R4Hp7p8GGOFejDOOJpm
      3D2cc2NvzL2jOfeOZpzMChqlkcK6vluDiHObPZ7bHXB5Z8D5zR7nNxOEX5E3KfN6yryeMa6O
      mVZj5s2MrJ5T6oKsWX0fFy584vVI3D4Df/jsCVjt/YLs//pvbDmf49m1mW2FkBzaVIoYXLIi
      iLdsMMaPbC6y0e2tNHJ7O400t10O24ACnmst6qAVay8E17Eu8iMGNGxN7330+Cbq8APM+Cbq
      4H0bRCpnK9dceragYXRlGURydq7a6qb2LvfiM+6bpLSiUiVlU1LWBfNqzt7sHtNiyv3pXU6y
      Y07yY/bne0yLyfJ9UkgCNyRwAyIvYhRtLKvazg8uMAiH7PR22U52iR8hHfXrWARzGqVpGmu1
      F6m+hZjnufUAJvmc6+ObfDL5BDeZEg9LPF/heFZIPbnJ+CBif0+yd8chn3vUpcODU4NFms+m
      +sSZx9a9d1DacDTNmWcVeVVjjH3fuY2E53aHPH9+yHO7Qy5t9xn2AnqhHRQe9TugjaZSJY2p
      KVTBrJowqyecVEek9Yzj8ohZPSZr0mdPwMZo9PEnCMez6y4fuPfQmXWtp7vzTzO7+gbada3O
      aplc8ujrWo1WdkVNlVkPYHwTffjhsiJJT263lUiiHTwSK9Thc8idq8jNl+w2es5Ge39LlE3J
      cXrIcX7M4Xyf4+yY/fn9pdirpqRSJUVdUOuVJQ/ckO1kh414kwuDi2xEm2zEm+z0dtmMt/Ac
      n9ALCd3wkcpYlbGDzrQacy+/zf3sDvv5XY6KAzQaX/pEbsJmsM3F+DnORRe5mFwhcFZ/K2MM
      edm0A0CbImwzBtbyNxRlw2xeMJlkjMdzTo5mFLWiQuBg6AMjDNue5LmdAee3erjY76xgebMd
      6rLmdFGB0QZVN2d/p1rZIOjyRdCUZ9ORWmm0OltZVjfVsyfgB1l2jMjKVXuXRcPv0x0j4hDR
      P9VDOPQ/tWOE/dwUkx6hJ7fRk1tWoCfXbcF/fmzLE8EuEk92kaPnrEXdfAm58YItRYzbTg5P
      cQmnMYa0SsmqOdNiyqQYM85POJjvc5juM8knjPMT5uWMSTFevs+RLpEXMQgG9IKBLWPt7bIR
      bXBhcIle0GcQDYmCkMNij/vZHe7nd5hWYybVCQZD6MRsh7tsBjtciC9xLrrE0B/hO49WFVcX
      FVVakk9TiklGNk7JxnPSoxl1XlGmBVVWoluXXToS13dBSpwH1jXLhyyddB64oZmQAuk88D73
      rIcmhEB6D362g+PK1WAgwPHcZ0/Axhgr1IUrPLdVTGjdFspLu1RuMWcdJva+rQ9xg43RNi+q
      akx6gDq6ZquQTq5jJrfQx9fbtZ059uZnnp2bnrKidpH4C3bVjRfbQNdXCJvXVFSqptENZV1w
      kh9znB1Zgc/3l2Lfn+9RqJwwDOglCf24x7A/wPd8KlXa4pumJssL+s6QN3e+w4ujV7g4uEzo
      RkghcaSDQLS3X9YYY2jKmnyakx5OyMYp+SQjO5mRnaSUaY5uNLpRGG0QjkBISdiPCAcxve0B
      8ahHPEqIN3tEwwTZCvdBsdrvxwPnfuU1nK0NX7zv1CkBv3Zp5oM8cwLW0wz1s4+tWD0HEfpL
      F5gksG7xAyOrtaZZG+g6sMUN07uog/dslHp8Y9VBwQ1tNDrZXhU6bL60LMYX4fCx/j7rijGG
      QuXM62mbc73Nfn6Pe9ltNAopJD13wEawTSgibh3c5u7xXWbZ1Fr7Ol3WzAsEw2jEqK1T73t9
      /LmHPAbnSKBOajzt4WmXQAT4cYgXegS9iHiUkGz2iTZ6hH37OOzHuI+pzc+T5pkTsNEaczRb
      rmnFc8+MkkZVmOk99PQu+viaLR88vIaZ31+1ajHKdoGIt9tywXbt6dbLiP4FuxonHHxmEOlZ
      I61n7OV3OSz27dy1uE9aT2lMgyNcNoMtzkWXuNCmcnpen8hJqNKCMi2YHJ5wfHjI0d4++3v3
      GU9PmHspmZeReRm5W1A4BWVQUtHOIQ1II/G1h6s9Yifi/NYlzm2e5/zmJUbxBpvRJhvJFpvx
      Fu6XtJzUGEPZFFSqIq9zu68y6vZxXmfkdWYDjm28YVpMn0EBG4Uav2ubjNUNoqxRh9fQJx/b
      8sHjj22EWiuMMCAFMtpADJ+zhfebL9n63o3nbbTX8axr/AysPX1UlFGUqmBeT9nP73E7vcG9
      7BbTaoIyDa50iZyEkbfJpeAK54NLDMyQelpTnGTkJyn5JCU9npFPMuq8xGiDMQYhBY7r4ngO
      4TAhGkQkrZsbbcSEGwnBMCStU8bZCQfzPQ7SfWbFlPuzexylh4zzE2pV0+iaWtUIBFI6uNIl
      8RN2e+fYaFea7fbOsRFtst3boRf08aSHIx2UsbXout2qpqJSJWmVUjUlWSu2rPUWqqYVZlOS
      1Sl5nZNVGUWdUaqKrErRxrr8hnZvDAZjpwSAlA5SCBzpIoVE8gzmgfODd/noR/8Gd3ZElN3H
      b6Z4KsWlxImAMIQkgji0x4GPiDfBCRDCYzGXRTgI4doAlHBttZX02w6Hvj2WLkL49rVOaFfl
      SM+ek37bxkWuPktIEB5COO2xYxenL58X7fNPV0Cr0Q2T6oTDYo/DYo+72S0Oiz2bw9Tg1A5x
      HbPRbDHSW4TzAH/u02QN5SynnNtAEbAMzgS9ED8KCAcxyUaPaKNHstHDT0LCQUyQBDhfsGKr
      0Q2TfMy8nDHOT1bpstkeR9kheZUxKezzxSK/DrjSYxSNCL2IsilplB0Aiqag0Q9fxALgOR6e
      9PFdH1e6BG5ozzkegWsj8KEXEXkxgRuQ+Am+4+O7AYNw2L7fI/BCPOmR+Alu24DimRNwOh3z
      Dz/6IVVpvzDCKBxdImlwA0XoF4ReSRhAFPlEcUgY+ECD0bYlqNGFrdxCg67a8w1Gl7ZCS3+e
      PsICK2Jpj4XTWnOxand66nkrbgchPRCeHTicwA4ILAYIB5wQkAjprwYP0TZnkwFChiAkQga2
      oky49lg47eAT/tqBotYVh8U+d9Nb3MtusZffJW8ySl2ABjd3ifYjguOA8DjEzV1c5UGNLXAB
      3MCzc86NHr3tAWE/Itkekmz2cAPPbr77hUX6RdHGVkcVdc4snbJ3fJ9P7n7E7cNbfHzzQ+qy
      RiqBdgxGGhzfIYl69KIew2SDzeEWvbBHLxow7I8Y9TboxT1c17OVba2ld6SLIySOdB+t+k4V
      GJViVI6pp+h6jFHzZ0/A0M438pw8S0nnM/IsI89S8jSlqkqaukadaiwgpCSKYsI4ptcfEMYx
      YRTR6w9xXAfHdXHds5bR6AZM3YpbW9EbZbsOnh4IjLKPdWlb1+ga0BhdYdSp9ywGC5XD8rho
      fx9FG3a1z5l2w9hI+fL5ds+j/csNUMmQVHhMnB73ZMyeiDiuxmgUjjGEGDap2TUV/VLgHUSI
      mY8xAtU4GC0wxiMcjYg3eiRb28SbQ4JB3w4uwreDDrKNzsoHBq520FoMaEuP5fN9L5RSNHVN
      XdfUdUWe5aRpSpbOmYzHpPM5s+mU6XTCbDplNplQFCvrK4TAcRw838d1XJRWaK1RTbPsHPNp
      Ulq81/N9wiAgCEIc1yEMI3suivA8D89ReGKOKzJ8OcUlxWGGKwpCHzzXIEXby088g0Gsz6Kp
      a8qyoK4qyiInm8/J5nOKIqcqCoo8p2lW7pLn+/h+QBCGBFFMFMck/T5BEOKHIVGc/BbquRei
      b9q+Uc1SrIuBBKPtAGGUfa0q7eBhKnRdUkxnFLMxs+yEidhnGmccSo8pLjMctBCIShDMfDaM
      4XKouDxyGYiK0CiMqW1PK6Psz2uv6ZFZinQxJVlMH4T1NlhNKVbPWw9DGY+ydimakLIOmBcu
      eeWTFYLJZEyWpsxnc8qiIM8zijynLFdeksDgeRD6ECcJUTygNxiS9EdsbJ0nSXoMN0YEQUgY
      Rfi+T9PUNFVOVUxoyhlNNaMu55T5mDI9Jp8fUBUz6sZQVoJaQVkJGmU78TZaUDdQ1YL2dsYo
      7VE3drD5NBzH4Mj2tlDPnICNgTwDxybjgTYHJ1b5udN7IZYBBa01WjXUVU2WzinyjHQ+J0/n
      ZOmcMi/sIntjQAiklDiOix8EJL0eYZy0+5g46eP71qUV8outHf3sX9WuUTZaoxpNMUnJpxnp
      0ZR0PCedzZhWY06iI7J+RjbIqNwS4xqkIwllzIbeYlNvs+VsMzQj+oMN+qOkdW8dhGgteht8
      WRxbT8DYqYVprMdgFOjC5sZbL8OebweW1qvQukY3JUoV1FVJNjtiOpkyn2fkpWCaCrJCMM8E
      aWE3rQVKgTKgtURIiRQCKQxhYIgDTRJpktDQjzVRYOhFml5s6McG1zE4jrWyjuvhOHZpprX6
      DogAcNGmj9EuUuyBqexgRd0OnO3vv/QkxCre4faR3gCcGJwhuAOMiEAm4PYxMgGnb293rDVl
      WaFUQ5Fbo6G1Is9z6qqiKAqqsqSqnsVKrL378P/+ezsMSmk31wXft3spwfPbVUPt3nXB81av
      E3L1+uX7rJUqipyiKsmLgjzPKcqSNEuptaapK+qqWl6K63oEUUQUx4RRTNzrEccJYRzjeh6e
      5+N6n56KMtqgmoYqq2iKinyakY9TimnG7HBCOS/IjmfkZUblVpQbJcV2QTWoqEYVKrQ519jt
      MfCGnI8vcyG+zFawy070eG/GpbW2nk1ZUpZlO3XJmM9mTKcTsjRlOhmTpRnz+Yx0Pmc+m535
      DNd18XyfKIpwXY8ojun1+wyGQ5IkYbSx2Z7r0UsiQr/Cd9spySJGcdpb0AXGKHRVoMoCVebU
      WUqT11S5pKoi8sKnrFzSzCUvBbWuEUIhnRLfz/G8HMeriTc2CQZbuNEAP97A8RKE08NxVnXQ
      QtqIN4CUYvn9FkKeOhbtAAJSymVRx4PnNc+iBa5r+PgaZBk0DVQVqMaeV6p9rOy5qrZ7pexr
      P43FYCClFf2px0ZIGqNpDFSqodCazBgyx6GQklJKckeil/9kied6uL5PEASEUUyUJMRJD9fx
      yA9TssOU9HBKPsmoMhvFrYt6WfKnfEU5Kq1gtwqqoRWr9jUCwVa4y250gZ3wHOfjy4z8TRK3
      94U9AaUUZVEwn8+Zz6ZkacpsOmM2nTCfzUjTOdPxhKoVcFUWlGV5Zt7o+z5xkhDHCUm/T6/f
      I4kT+sMhg8GQ4cZoOWeMogjHdZdezGdhtEbVijqraLKKOquospJ0PLNz3tmUNEuZpXa/SPM0
      qqFSFY1qztR4fx7kKQ9LyJVQ5YPHYuUROm1FnnSsJ2HPdwJ+OIs/wcP2i2Nt71+LVlC2ol8M
      AKf3ddWuUGqgbnsuN7UdDJravq79XGMMRmmaRlFrQ47kSDsc4jLVEhFKRCARngAJSLtu1vZ4
      BlMbdKFoygZFhYhTxjuGNMkokhzjGDwj8JVgswy4GF7k3PAFLg5fIvB7OJ5vc4zLiEg7ZRAC
      DTRKoZqGuq7J84x0Nmc6nZCmKdM28DM+ObaPJxOUUphTrYCl4+A6bhvA8RiMRiRJQpL0GG1s
      WJH2eow2NukPBgRhaNcEt19s8QjroxdTBKMMWmmqrKDMCoppTj5LmU9mTMcTJicnzIs5WZm1
      W0pW5SijTuVbV1bRlZLQ94gCjyQKGSQxUVviGcWrFVZVXaOV7XhSK0VVVShlqGsolUQZD5RE
      Ko1jQCuFaL9SSjWYNqCojEZrO/iWKDLRUEiN0gqFttcFCNXgGIPbNAhjnj0BG2OYlgX1Z1nU
      z6Ax+lGDuWffVzcUJzOyoynF8Yx0/5hympEXDZUSq7GjnUYBeElAvJ2Q9CShV1GIgomeMQ0z
      siCj9EoqrwIDjnYI6oCwDkmKmPOpz4VMMqo1rjHUQlBjUFVNrW3b2dwYUgxzAzNjmAO51mR5
      TpampPP52f7cQiC8tnm65yJ9nzCOGA436A/69IdDkqSHE/gkSY8oigjjL76sUBrwjCBQAkdp
      dF4xm8zI5imT42Nm8ymz6ZTJZEJZFxRNSVEVlE25FAhgbwnjegjPRfg+wvcJw4A49OmFAb7n
      EnguoecSRQF+3MN4AU4Q4QYhjh/g+LY7SVaVlE1D0dRkdU2tGqqmoWgaKtVQNQp1aoWRqyEw
      DgkuA+HSx2MofAbCJ9ISVTaoym6LS9YYKmmopcHzJWHoEsU+YeziRj6O7zx7Ar49GfNv3vqP
      qN+wYbxuR+3Pi1G2he0jvVYAwuD4OcKbI50M4c1BlhhRt7EiD9P00HUfr+qRZBCnDUHZELou
      YXgqn2sMSggUhiovSNOMLLXps7woybKMRuv2y+0hwhDh+8gwsOeiEBmGCN+z9y2S0q7Ich59
      reuvwzEQKolbKWRZofMcihKRV5iyIC8y6qpA1VXbDth2sjgrUBcRBMg4stcchojAR4YRIgzs
      dTsOwnEeyzUD+I4VfOB69PyAwHWJfZ/Q9ezf3/OIvYDQc4k9H6d1lV0p264hEgfaBRXairhs
      qOYFdV5TzwvqrKLOK+q0sjdHbxHOM3h70apR/NXH1znJS4pa02hjvdy25cvDEMYgVEMsDIlR
      uEVJPc3JT1L0w0L+QuB4Dq7v4gZt0fxGj3ijR9CLHtJdCgymLT+ccVIdcVjeJdfHCG+GEAaj
      DKY0qKnGzwOCssf0yJDPG0xZovMCUxTW1V9ehsD3fRvkGfQZDAZsbG6ytbVFkeco1aDq5kxa
      TAGlFFRSEieLiLndu66L47g4rvvgxbexg9rGEuoGVINb2HLVajajznPKyYx50zBtFOOqZtIo
      yqpCFBV1kZFXOY1uzlz/ckG9tC15o8AniQKSwCcKfCLfIwytZZRS4mqDp7Td+yFe0sfpDX41
      ENkGHpECI6WdNhhotLaBQWXzPVLbVJxEYVSBIxskGaEnrCAd+7cTsgEMQmiEaFN1urRTpUVh
      j6nb1J1ZFvsYbe8Qgl6k4tq6AaNtlBtO1RI0aOXQVANUE6PqZ7ypnTaGstHUypCVDfN5ydHB
      jKPDGdOTFJHmyLxAZjmiqhBljajrpQCN66CDABP66DhChwGD7QHb54YMhxH9QchwmBCFv1pt
      U9c1uU45rg45LPa4l93mIL/PtB7beVljUDONOlbU+wp1pFBzjcnb7pJSEoQhYRjZ1FQU0uv1
      6fX79AdDBsMhg+HA5qODgCiOCYJg2Th/UYRQlYXNj2YZRZ6RzeeURU6R5xRFbnuG0Q4GQYDn
      +wRBSNTrEUUJcS8hCCOU0ozHJ0zHNmh1cnjEdDJhNp+Spzb3mudnBSqFwPdc2xPbc4kDn9D3
      iAOfOPSJAx/fdQiDgDAKCcIE6QU4joeczZFZgchyKDKcqkI0NVorlDE02rqwtVbWFVX2caM1
      tW7aoKKhEVBJgXAFjg/S0/i+xnNrkkQRxRo/UPacp/GDR+ysYto7rwJaG5seUva8EBJPBDjC
      QRuv/S56GGmr7IyxOXGjHbTSGG1fY7SDQWKMg9EuWoXPnoCNNpzcOWS+P2F+OCWfpOTjlGyc
      omprkXR7G00hBF7gEfRCku0ByVafaJhAHDH3fObCJVOQKcOkUqi22bpuakyZQZ2j8zmyyfAo
      iMOKwp+Rh3OafoX2NbWu7PsqMHODuq/RR5qgioj8mH48pNfvMxqNSHo9+oMhSa/HaGOE63o2
      UOTaQNHj+FsZY5ZVS01dk2Upd27eZO/eHY4PD3CkQxSFqxx2Gxk1BsqyIMtyirIgz6xgy7Ik
      8hwi32UQhW0nSivOwHPbZnaAsWm2oigoi5yyKGgaZTttOh5NZfOixigaVWO0DZjZAJZaWi2b
      lT7lWAsB6OXPiSKIE0h6gjiGpAdxIoj///bOpVmS47rvv3Mys6q7773zxAAgID4gU2FTImVa
      IqkXCWvnhRd2OMIrrfxN+BG8c4R3XtjeObzwyhGKkK0I60FCIGVSEiGBQBgkAAKDGczc291V
      lY/jRWb1vTOYJ0WMMLj9B2rqeaurq/OfefI8l6euAc7NphuHuBUyeXTj0GGBxkDaKuspMqTI
      eqxz3s1U58JjSqzHuMsbDrYLNa9hCfU/p4HOLznoL3K0uMRBd8TF5RXUL0gSSGFFagQ++9tQ
      71izfpxHT6ybP3mPP/wP/7nem+o3rM5z9Mxljq5d4ujaZS48d5WDqxdYHC4Jq56YItM4ME0T
      65Pqfrder7n14c2duWR9csL7N2+xPTmmlBFdCe6Sw191+Gcd/opDl4qgOHooR7hyDRkOkeEQ
      toHF4pArFy9w5eIhV46W9F650DuCE3qveBWCk1Ozws8BM6t22OYMsNls2GzWfHjjBrdv3+bG
      9evVNntyXM0/Jyd3xN06VTrvWfQdF4+OuHzxkEsXDlmtFhSEZEJBmkvHTlah0sEIUl0Bp/Vt
      NrdusD25xbA5YRq2YIYLoUbdqO62xbkmugd816Pe0y1WVbvdLwj9AufBacJpxrsBKSeo3UbK
      h6itWSwyy6WdlrARV/29/QHqDpBwGe0uo/1zSHcFDZeRcBnxR1V6MquWhdm8CJBS1bpPEYuJ
      PEyUmMjbke3xhuPbx4ybgZOTLVMx1PUEv6yBCHfXe1JBvVJKIo5bxuGYlEdSGRltS/SRIWyZ
      VkbsI/6iMi3L+SPw9Z+8yZ/9l38PxcjWsR5hKkZyBs5jvqtV73yPhAWb5v0yNs+X8Yx/LNRI
      E9850kHCXVP8NYe77NCVoAtFTFjEJZenKzy7+AzPL19k6S4Q44pNNLaxsJ4KQyyU+yjFnAid
      F7wKvVN6rxz2yio4DnuHb40yTRNpmhimLbePb3KyPeZ4fYvNdsM4RYYpstls2Ww2TI3Ed7gU
      itC1HFWrsGQRFhz0Byy7vppTFh3eG533BO/wd6WGmTGlxHqzYZgmXLfAdUukC2RJZMlkybsM
      FCVnSpqwkgkhcHTpMoeHFwi+p3dLgvZ4rZKG4HYiPQA2Ucb3KdNNLJ9gaYPlzW7u+FEI4g/R
      7hmke4biAxaW5BAoakxuomghSyb6iVgiSSJJE7FMDHlbJSYrdNLhJsXWBTd53ORwg0AUfHT4
      HHDm8NkT6OgXC8KqQ4PDLwK+97g+EFYdrve43jMycHN4nw9O3uXtD/6Od4/fYuMGrFOsd1gr
      O6TiWPkD3DqfPwIf//R1vvs//picpLrPaa7lUHJkSJkpRYZcGFMm5sQmJpw6Fn7BYX9YFSYr
      Tz7KbC+t2RyuWfdrihZUlFACh8MRl7aXOBqOuLC9SB8XOGsRRvfF/XXa1t5FsUwqmSlNbKYN
      m2nNetowxKE6HowbNnFDLnnn/omAkzqiBefpfMcqLFmGZSVnWLLslqzCilW3qvZXpHkAuQc+
      MfCR9DAPRv2OJrYjc9JIYiIzkTQ28dcoaFPDt5HfXF3wOHOoORQhSyG5SNZM1Ehyiaz1vtEl
      imSiq8ejRopmokskjRQp1Ow7TTQVO/OkIFY/W9pzqClqtT1mqfHihp3eo63nlD41jrf+6zWw
      8At6X6szdK6nb53T7VgrQWzTlkKmzOYnA589R3KBy91Vnlk8x+X+Oa6EZ7DjzPDBycdfXvST
      hnHq2LyrLTe7YDZ3EDUJWtcWaA1tkZmOJobnBk4u3+LmxUhcRkwMnZRwEji4fsDy+pLF8YLD
      eERIHihkBj4ot6t/RHOrNXItLaRVCSpSA+ATkUyqtsUxMsRILEpGiMVa6FG0mgAAGhpJREFU
      JoaJIQ53UN2rI7huV6T8hdXzLPueVddxsFjQBWXRexadY9HNppM5Z+K8hqgJ/MjB0RGrw0O6
      5QGu/2jWSxHdkbZ+r+bze4+Otp6r9sxYYv2eeUvMa9J0k2m6yTjdQKfrjHnAgEGMEVhbx2CB
      LAWTQtFC2a1td+yeMBATtChEkCRoViQKkuv2oiyQJLjicMUhWXDZ4bJDiyJWTTwiCkkR8Sge
      y4qp1BxfKRFLrrm6SsYoTJrJminOSH0meSN3mRIKuYtkicBtAHI6k0PLIKfV6S9rUFLrTIuD
      4TY2nVDijwmTwwaHRnf+CGwycvFzt3DqzzhaCYJSTJiWws1u4MMwsLk4kBeZ3GdQ8MlxeVpx
      8N4FlscLFjcCtk64gWpjzULKG2IWYp5HEK2pUC0y2dSWSNztRzIZk0KmtNHz9Hkdjk4CnXQc
      yIrL/iJBAgvXswor+q7HO08IWq0jnSGuIGKos9pZlIzFzJgBAXUtQGPu6AtkHMaa8eYNPkQa
      R1tH54yiheQL1hk5FLIUSlcooZC0YAGSFpJmktRjWY3oCoY1j6dCLpFcJoplSvP64l4JJHNC
      k6LxdHHJEWKo+1MdDb33NUukr/qMEh05KWYQo5AipI2RN8Z4Amk0sgkZSEBq8/UakiAUgeyE
      LDCV+hPW56ydb7H6+1j7dapG2E4dcLjTv+fuLsYeLtM8Fs4dgfvFZT78oJDtBFsp24OB2wcn
      DIeJfLXDFq5mkZgcfuO59P5lLq0vcTRc4EK6WNN9KuCFvMrkZSZZIuYt43CTcXudbbzFEDdc
      XwvH22rWmLHTQtIM+uJZypJOukpUFwgS6KUjSMDJA8p6ZLBtITIxibEWMLUq2jlrKYEaAX2p
      S2jLme28yJi3jxw3V0cP7vcIBcykhSALFmVu8VgWSIIkhahIdFj0WOwo8QJlUshCnhwlKyUq
      NiklKxaVnJVUv+IdRJvOEK6cOfco0Jb8cfYc3e2fepFWZZvAwsGBGk6gc4ZTY+nAK/S1iVAa
      kYPa7lkQqU9YajjnUh1qNeWS1HTiuw8O7s5JVXfmPTuqB5qmkRXX8ZIp4QKjvwQizFlnz90c
      +LXX3uB//vCHJJeJR1tySIgkkIhIwQ/C6r2OxU1PWDskFca0ZYoDUxqY4pYpDWTLRFKtUXSm
      n1UUL46gHUFqHZteO3rtCeJZ+JaJAU9Qh5u/n0IRqyObM7LWUc60kGdyuTrqmbMmkuXddgml
      krdliji7n7XW3SlZKkFs3pYz20qZr0l1O6dKqPnanLSObkUqydp1JMXa383kLVnn4EJyWx6s
      A6jwjVxearyrSiWUV1o+qJZXX+drhc7N59txIJCZJBPVKERGUayMjBiTOBa+44p3XPCOI69c
      dK7ee/4s6nx2XTK3UuZWztzOmW1JrPIJfdnSl4GljSxs4CifYKnHJ0dJS6Z4QIyXCaVDrUfU
      t8hEIS2UtHKwcnQHAe2MYPm+o+n8Dj9aR+IcEvinx+/yX7/zv5mOqweO+NAMkbS5ncz/122b
      s1rYadWG2faYEhYjlgsHEjhwCy66FcGUgKMXw/xACVuS35LCmuIySRNZCqNmshQm6pKzkEv1
      CMpZSVlOj50hVE6yI1LJSo7aMmCcHs/teMlaI+hoftZVFmzTh/otrc0Z604bjdrOvC2AiCFm
      BEmgrpLFSXVMaGVIVGo1ma6d8zMpijVSSnOIklMitutm4szv/47PLkCyGvAbrW5Hw1JbomGp
      XmNtaCyUNooXRhFSFQpIUv2LTcDaTMc7JXjhijMuBcW6vgaS9IK4+iAmkM1wlnBk3FkB2aCY
      pzA7W9yj8WUoTigOTKVm1qAu9+vaMjCJ4kxYFkWagF6oOoFzJ0KH2yPbP3qVYdrOCSCqBX92
      tes7dBHoVgd0h4fYMjBqIplSkqdkT0ldVWq4BRoEUThW4UTgfWeoZnSnYPHAUVuo0Uklg2Ti
      KDWQaRDiWA+nZORkpGSUXNcpGiU3j55y6tmDGZ42ElGJogJBquNCLwnnEr2P9C4TNHPkTgiS
      WCw6FsuOiwvPqjugd4K3iWATHSPBph2pRKSRy5C8ZUowJGFIwtYWDP4SyR2Q3P0DFrJVMTOW
      QjQjUTtEJ1IXqrnMt+070hOl6koKlXR4wdo0RortcgeQ27x+PlYgtHd2MEdwQVPrg6Sy28aq
      9lidQ5zWTsUr3jv6g8DyqKM/CiwWHdU1xJo3VybZXLcpEtXItOqL2M5nPreBwGJBx0IdT23u
      T0+luDoDqZkpWw82k3SAms547h30HCqxonP8dPkim0WgmFKsxusiYEWxtWBrKO9J01ILWKCU
      ul9/7TO5knQOQasjhvNStb0U+k5Y9EIXhEUQur6uQyd03pNFKB2UripNaqAB9zTN1Iwg1ZOs
      zA22ETgIeIwABDF6SazcyEILB37D0g0EJso04sMRBwcvcvnKZ3HuqI70pSNNiWm7ZtqeMA1r
      jrdrirWRnyou53msECAA3pBiSDR0KnRpQnOhI9FJwpPwVghSPahuZ+GdqHwwCjeTMBWpo7II
      irAAegRHJXIQoVfhyJTQrtu9d6OS9y5I3mmYdlCn+ODQlceFgOs71HvE12R++IB4j6mn+FqF
      w0Qp3tXfRJTBjGMRUoHilJrkp0oVXhUP9BhLwJtRKGjLzuKskDFcydiU8EPCplR9xkshTxPE
      iRJjdXHNmZQSOWdyTqQ4kVOV2ooIhWpuK+1zzxVSXpJPruJzQYEOo8dqyFrbDhgO6Kxud9Qf
      JWB0TnE515KTXS092QWH5EQwQ8ikTS0vKpsq+omd6h7nNqjltKHNZ01qAyxA8sIUHNkJySsx
      KMkrU6dkp4wLRwxK9sq48MROmYAR4Vg8RjUBVbESkDY6TYJMoLcGsC1aY0rxZjijxpricO4C
      zqoHVZgyi00ijJF+neg3iTBm3FTQUklc1+zuNyMj5Dq+EoDPtWVGYVYgNZNWE1Wtyc7W5GcT
      oXhH8Z7iXCWXc5QQdvvFOazvKF2ArkMWPaULWN/tiJhESAjZ1c5oZwPeCae0+UXtJWVemiOz
      aDvXgu+tTbtsF4wvu5jqs/ucTdnEnSLzPF2htTPMcO1zQ1s7K1jKaMq103NK584hgQ/iwL+b
      3saXs56pTTMs2kTRqiEu85yp/W0CBozkqd4+Yw0qGaivP91jImNAvsfxJKcDhYrQixKcop3i
      RRAxlgolSF08lFCXqmHO1R5qBYsZkuykwQSMwGBWF2BjLQuIGa1A6S7Kx7eE4SKC0+qq6dyc
      U0qQvtvNAGbMpPWp4LLhc8Enw6WCz1VMzqWVAi2Fqnbt6f0C7wIqjt73mAt4V4toiwug2gjp
      KU6xtm/38fraoRQ0p7qkhJSEixEZJnRzC8kZFyeWcURyxo9bXJzw44DmhIsTmiJ+3KIpoimh
      OaIxtvNjO1aX4nyNYlKHqSN734irmKudzHy+aH3+eq1WDzBVsu9AhBw6imujP5BDX8+H0/PZ
      ecx5kihDexfm/Pkj8E+31/lPnxlJUr+6nI6NFFf1fCqGUkhae+x5Nps5NV/cDaPOXc6iF6FT
      IaiyUuXQORYiLFTpXT3Wt3O5zf/qHFAAY3umxy5mJDM2pbAthcEKQ0mcxMw4GNtSWJfC0JYM
      JKtzL2lRLk7dLi+xd2dzFDt61+Gdw/AE9Qie4LrqveUCwbk6L7NMsdSqEqRqz7XCSGbbbL2l
      XfMRWRaowXPVGV9tjUuZLmV8zPhtoY+JkCFk6FKhS0Y3JVwu+KmSzY9bNMZKujjh44jmhJSC
      lFzXVpB8Zns+/oC2kb2vEWatw8hdqOsgTF3HpAvMOxKCtoQQlmqGjPn+LhdsKrhdkAVoSjiq
      hCMY3upI+/OoZw3BmtLVzuMc+KA/5Nq1Q7LdKyPH3Wb4j6KKlZUUB87RiWepykKVZSPjvO3v
      msuW+pcYQkEporS7UUyIKZFT4jgWBjM2GthYTbUTUYrvq+jWLQihZvdHHUt1HIjynFayVaJ6
      vHMPr/VjtbMSSiPA3OAbAawgU0bLiOVSG2OacNO4G5XcOLRjE24a6kg2jWickLhFpg06jWjO
      uJTxKRGmiHtYUoWmQKtelUp0jihtFNOaQyyFwOgdeRFI3jF1Hdl7snPktl9maULrIlKVVa5J
      tkmlKp5mv+ycKSlScqyRZTm1c2M9l1M10sLOba96nc2GHteWswkJbZcu9mwOaWd2eqs21dJS
      164dd6Vpq+e/Ke1TyjlMqXP8xvc5fOO/tTnXg1GNBZ4s1WiQcWTx1YDQ1lECaXdNIIlnoiNL
      IOPqvvTtb6uJIaOUdq7gdmROeOxBjhuAWkYoTUFUE+75NNURKCUkprpfIi7VUcqnEWLGxwEX
      J1ya0HFsYmOC8VRUlJzQnJGcqyiZUx1dco1RfmD/JtTynK4ab8XVCBtx1bCrXhCviBck1OMa
      BO1cPe5AfJ1GiD9zHxWKU44JnJhnI44b1nFMYJOFdXYcRyGlXMXnNNV3kSI6b7fvQFtLyXjL
      KIZTqSlldbYzz9OI+ViNApNdNFhVdKdsRBMSSsmlprSl7qfWLc7bBsTd9sPt4fOc+2E4dyPw
      LX/AK/638NrX+YooRTxROqJ4MoHYiDiPjiayGznnhXnbqrgL7F647Hw0DUltFIupNpyUcVMV
      +TSOhDYPc3FCS0anET8NhDLSl4GujHR5iy8JN26RlLFYIFaNZlWynCpcaCMoTUs9P8rcFHbr
      1oYyQm420lEUExhFyKpEEXKnxEUgeyEHxUJNsqedwwWla2Fw2iuh96gK3rtKAicEX4MOlHpc
      lKoEijWJs02JUjIxFWIq1b94ncnFiDGRmvko5WqT9i2xn3fCSoSjJk52Xqrpxynag19J1Slo
      m+s7X2sJSb0u+DoS7+zNd2wDVD2EtPXZMAez02sqZEfK0zYyy3PCLLiX3XFhQilNsorozpc6
      lzolySVRymnaoHo8ky2TS94lRjh3BN6cFL70/k18NswVkgWSeUwyKTsMIZpW76HiKFZ9ZK1l
      XEzbCZsiNoxYjEiqChAXR3ycdooP15QlLkXUcl1KbiPoAyCnAQO7QAHn5sgBItVHt5LOMTlH
      klKTnzkjKiQpRCckKRQVxDuSWJ3feQUxxFcNd1HFKUAiNOIJCe8UKC13k8NLwas79Y7SgCI4
      cXgNiNWoJzNFUkalwJRRSVhOIEayJnu4NqKJ4DyVaALBK6pd/UxXR8P6HA9GaR1YafZXqAq0
      ucpfsWZ2sUqQRGFMqZFCiDlV83wBs5pmKZVU72HSSNO2298oglOHiquFxcWhrr4D73qc+BrT
      rB7f6h+FpqxTUUKb4gigTQMvou1nlpazq2v0n1P1fHREPncEfjaNlD/7Pnk71LlMylXhYIYr
      1eje5eZ5Vc6sH4RGNnGKtMwY4n0VE7VDnFa7o3M1ZWrTWGrwzXHAnV4zk3YmsEpVQrW8Tclg
      LHPQXR0ZRABNrXRQRiQjzkBjTUOrhcS2GU+NJFusejJQJFMk1jmdWGtsWmNwxaHN9iuElrdY
      UWrKV22joUrG6Wwjv+PFtKVNFGctnwmUZoYpQrSRVCJGJpaRTU7kMZMtEctYCZSFMRspSw2+
      yK4SrWXytOIoxVOKAxNydpTiqqto8TUFjRlWOsBB8WABrHba1TPENZORVNI0S4WWjKG7ObuU
      U7NRlurQbCg2T2ZdzVxp6jGR5lF2akYSkTOjPFWhKIb34LXgXeskXdtXdpUjvJYW7TSRNZ0/
      Am+P32Hz/utIkepb7ArZN/9jnzGtPsTZFUrIFFdqWKHP1ce4XW9awAkaqljmJOBw7cdxBOna
      aCp4+lrPVRSvNUhB1eHE08mijWKeThdI682duqYoqcSqBCt4NRazb+Hu+N09c9uXs0d0J0qb
      HZ6emE2UWFu3xmwgRU+Nslmbi1Aj37xux2z2Syxnz1fznOV5qnFmWmfsbLBihmvbaoVuts3a
      qehqu7+p98gmTLmap4oZQ65XxlJIrR+p+a+sJqqjlZiJtYic2lirZFimlOoSS8nEkpknRaW+
      BiaajR4jnzH/3f2Snd15zATUVRKbD7Vj9p6iDt8yk3TOIS2TbIzVynGvEGs5uxYILVb7fBG4
      ZPzwIxa/8WYNqWtBuqUF5pYW/1mk2R2l2udEXHWMcAHB45ygznASalxvI+csTulcNpKagkbQ
      nej0YERSLlVBYpBzHWNTtuodmOv8K+WaQTPlQimtcEQ2mOsDZchZkFLDAUuqHlUqhoaC9oUQ
      MtYlRAraJaSvUUda3C6xZYm6y+eUpzbvt5p8ElNqMstK1DnNdkk18AEgtb+phavr+WyNTMYu
      b/Lsarg737bTfN5Ozxe7X96Sx4fIGR/Urj6raFfNO0ZNAQv4NlJi4JvX2M4FUto7AUZ21aF2
      VTY+itmzpsLi/BePh1kqPFcEzuv3eHt9wpe++Pt1biV6KtrI3NiEPDe25rYIENPc2CA1H9qY
      rM6VjTYa1AtiPp2HlZJqJE8pdd22cxJysUY2Y8iRmEv1q6U2+NKUUKXYbuQ5uz9jDkSYbdqz
      Y8opTv2NmtB9Zrud2TW4B1fGexjuCPhvdnWZ5/HQbNL1vYubUydUs87p+fpbhDPHZoHj7LaK
      zrMC1FrJEWvf3mrqGcnWxP12LyckV2r8iihK9UdOrhJJpVZAwEH2peXyahUxgKRzXJUQShW/
      rXnP+Xwa3lBEUBMCrtY9s2oK6sU3kbtd19xBTat9V6BW4gDMNaXXHEwxV2cA5mDuJ07gHAeu
      37jNxctX6YMwjhOLxYLt+oRudVhtcx8Tjq1D33+P14ermLk6irXGH/O957nlzNzFy72rCM6a
      xftBW+Eqo/4Ac/20j9xH5E5iiuDvMqPFe9h1DRhaVKwBQXvQqty6G9vW+3ut87TcIqGgNgyv
      jkwhUlANCHXeXlSYyJVAMjsSeLKrChrfzF9RqpJofpaanqdnvKtjMIxtqzFcPcB6DDu9zkBK
      9eKqyi+H6qlddZT0kd9iFFA5fT9FjKh3fm6VkO7x8u+4xqMPs5+fuVbk56fR0u78W4fS3eXi
      sZCuTsnugSdLYEt89//8CcsrV/ib19/it3/j1/jr117jK198gT/57hu8/PLXP9aPX568w8Ii
      /919jU0smEKexdr7vIlyZkS5HwryAJHp9D72KNc8go3woTD+vgPpuYb3D3Hb/Aj+PlU+7peA
      7yw29z3zZAm8/YB49Ev81le+yPf/4s/ZjIkct7zynR/y1W/8Ll64o1rd7du3SSkRQmC73dL3
      Pc451us1y+VyF7WxWq3Ybrc12Xnfs16v6boOVWUYBhaLRS28lZRhEfjLv32PsQRakqpfGD6x
      HjF7PCbu34laE3llNhr/A+PJErgUtOuAVibRjPd/8jpl8Vm+2jVH7jOlSi5cuLDzxLp48eId
      x+/G0dHRPbfvwNWrXP3df81//NLfkV/4dWT1LMUe3ttWW+LD6WkmFHuYomqPTzqSBe5J4mLk
      d96Fk4x+9hqyulcyryeLJ0vg5UWGd19h/JVr3Ly15aXO8/xLX+aLzx7wp6/+DS9/7Uu70h/A
      nRXxfkGQL7zM4vPfumcWxT32eCievYzlUou6fQLwxH2h1zfe5i9+8GP+0Ze/yvMXF7z/wQ2e
      e/YaP3vrDVbPfoGj/vTFPLH6wHvs8ZTi3AUz7LHHpwl7duyxx1OMPYH32OMpxp7Ae+zxFGNP
      4D32eIqxJ/AeezzF+EQHMwx31eLdY4897sQn2oz0KI+Wc27RJo8mTJjV5GJnHUYedv+cM133
      YAf4GSmlR773fL1z7p5BEr+o+3+c18+uqo+Kj/t9Pm57iDHWYIxH/IzH/b3mBHbuYWlxG4Zh
      oO/7R77/J5rAj4L58R/1Cz8ugedC2Y/aIB7Xdl1KaUkAHr1BPO79P87rc86P3Djh43+fj9se
      Zm+/R/2MxyXw4z5PzrlmdDkvBH5c1BIl5bEa3R57zHjcDvfjxrkj8B57fJqw10LvscdTjE8l
      gc2MOI0Mw9jS0hjTODDFtKvql2LchQiaGTHGfTzvHsC92k9hGgdiyrvzp+3HyCkyDAPpPlld
      Pk58os1IPy82N9/m1R+8ATaxePaLvLQ65pXXP4CU+Ma3vsn03pv80R9+l2/+wb/lhV758Q+/
      x3e//xP+5R/8Kw4ffvs9PuVYX/9/vPI3b+HyloMXvsLz+jP+6ie3sFT42je/xfDOj/jj7/xf
      vvkv/g3PLjOvvvJnTObZxMDv//NvPFFSuW9/+9vffoKf90Tg+wM++/kv8MyR550bW65f/4Bv
      vfwtPrPY8PpxxwvXrrBII4sXXuTIC93qMnZ8k2de+jyPZtzY49MMtzjiC1/4AlcPM+98UNje
      vMk/+73f45nFxLsfwrPPPcNStvSXX+Ro1fGZFz/HZ198jrfffIsXX/ocT1I9+qkUoUWEd3/8
      A1557Tq/8ZVfQUMtZLVY9sRUWB0coDslouPwcPkP+bh7fMKgKrz1o+/x6hsjv/mVFzHt8CqE
      sABLHBwc7hJ2iMDmw3f5o//1p3zp69944gPAp1KEvv2zN3l7s+Kbv/0SKsLKIu8ej2x/ep0r
      zz//D/14e3zCcfz2a7xbrvLNr38WodDrhhvHI+ufvcPiuS/fcW0e1/zlj97id15+mYV/8uPh
      p9KM9N6bP+R7f/cuwSnPfv6f8I9fPOC7f/4q/tJn+Oqv/jKv/eV3eOudm+jykK/82pd482//
      mpsfHtNduMbv/PZvsgp7G/F5xjuvfY8f/OQmXuAzv/xlXrrqePX7P6C79Ev801/9HH/1nT/l
      7Ru30bDgV3/9y/zolVeRvmNxeI2vff3LdxQV/bjxqSTwHnucF3wq58B77HFesCfwHns8xdgT
      eI89nmLsCbzHHk8x9gTeY4+nGHsC77HHU4w9gffY4ynGnsB77PEUY0/gPfZ4irEn8B57PMXY
      E3iPPZ5i7Am8xx5PMfYE3mOPpxh7Au+xx1OMPYH32OMpxv8HMcDnWR6eKZUAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='240' name='Region-wise Sales' width='240'>
      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
      gg==
    </thumbnail>
    <thumbnail height='240' name='Segment-wise Sales' width='240'>
      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
      wCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgZTwCIGU8AiBlPAIgbL+veFHuja
      y8Z1a9lS10I46WDinGVce/XZFNLLumee4s3+Mq6/9zPMLnYc/gqLcOMWXnpxBRvyLueJLy3O
      6PxF0inLAx5g56pV9JQv5N4HJuJzROlqPoh1ZP1ELlho0by7g+nzKg4dTDLGgc4wY8dOYFfU
      nbGZi4yE7L4LHdrJ+/3jWXD+ZPz5duzOAkaPr8R/1CZFY6bgCu2me+jQ7UQ0THckjC9Ygdtx
      wr2KnDGy+gw80FxPX34F7614mh37uki4gsy/+XYWnFV45DdPob+UpGc/baEopWPcDIZ7ifTb
      mTjZi63t1GMkk0kikUhaj2MkJZNJBgcHiUT02ysXZHfAkTB9vRHOWnY7V9zqI9m7h18992PW
      Lfs8F1cf2sbh8xMoLKSzpZVo+QT6uuoZ8E2hoqDluP3FYjGSSX1ukJw5sjpgt8dDoHoGkyv8
      h864xVOYf8E23mtqJ1lddGgju4fygJeGpg7C0TF01ndQMvcyXMPHB5yfn3/cssHBQTweT3oP
      ZATZ7XY8Hg9erzfTU5ERkNWPgX3VE3Ds2U5b7Njl9mM++9ZGYXkQR3iA7lAdDf3VTCnLG9F5
      imRKVgdM8WzOGVXPn97aTs/QMEM9u3hnc5jxE8uOmbi9oIKJhRFq31lDbNJsRmX3UYmkTFbf
      hcbuZd7yu8h78xV+9P1XiBeMZcmttzO7zAU48AVH4Qaw5THh7LGs+SDKwhuKsAG4fFQU2zI6
      fZF0s1mWZZ16szPXqR4D3/Dw8yM4m09uTLCQb959MZVB/6k3FuPpzqaIwRSwiMEUsIjBFLCI
      wRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEU
      sIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCI
      wRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEU
      sIjBFLCIwRSwiMGcmZ7AqYTq3+OD1sEjt/O9o5k8cyqBvCEO1G6nccBHzawpFLv+/DWJSIg9
      e+rpcFaxaEZVBmYtMjKy/gy8d+Pr7Os70ZpBGtZuYvuuDXxwIHbU8gQ9+xuoe+8tXnq7YYRm
      KZIZWX4G7qG3v5y51y5iWuGJ1geYONtHV10j0bE1uAESg7QdjFBSOpaiSJYfnsgnlN0/4cOt
      tB70U9rdSONBG858LyUlAdxO25FNisum4WjaRmvfJCb47Qz199IbHiBQNQbX7mN3l0wmTzhM
      IpFI51GMLMsimUieWcckJ5XdAcfcBMZE2b5mDRZgJS3KaxYw//wJ+ByHNnH7fCR8LkIHehjv
      DxDu7yAyFGBq4PhYh4aGThhxPB5P84GMHMuyiA8Pn1HHJCeX3QF7J3D9XRMAsJJx+tv38oeV
      r7Oj6h4uPHxtypbvI1joZW9XGwPDAfoPNJAov4Qi567jdud0OrEs65hlw8PDuN3utB/KSLHZ
      7eTn551RxyQnl/UXsT5is7vwV9QwqWyIUM9RF61sLspH++mL9BAe6KWlPk71lBIcJ9iH0+nE
      5XId80/EZFkd8GBXC61dfcSGk1hWglg4REePhd+Xf9RWNvLLqygd7KepfhUNBedR48vqwxJJ
      may+C53s3cfqzSECgVG4HQnCHS30lSzi6rFu4KizsKOYmrE2XlxVz7iblmb3QYmkUFb/rHsn
      XMTVebtpaA4xGHdQMmkeC2ZMpsgB4GHiwnMPPXWEjcCk2cyNVzGu8vAhFU9i6fkZm7rIiMjq
      gMFOcdXZzD3hi6nyKJ864cgtm6+cOeeX/3m1r5w5k9I+QZGM0oNFEYMpYBGDKWARgylgEYMp
      YBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWAR
      gylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMp
      YBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWARgylgEYMpYBGDKWAR
      gylgEYMpYBGDGRKwRWjH6zz5+GO81fjRsjBbX/o//ueZV/hw8Nithzp28euf/DePPv/2SE9U
      ZERlf8BWkmjHLtbvsqgs7Kcn+tGKBOFQgElT+6jb1U3yyPZDtDV34Pd4iAwnMjNnkRGS9QEn
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
